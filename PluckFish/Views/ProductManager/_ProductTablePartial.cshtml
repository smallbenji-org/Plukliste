@model PluckFish.Controllers.ProductViewModel

<table class="vare-table">
    <thead>
        <tr>
            <th>Produkt ID</th>
            <th>Produktnavn</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="produkter">
        @foreach (var product in Model.Products)
        {
            <tr>
                <td data-label="Produkt Id">@product.ProductID</td>
                <td data-label="Produktnavn" class="produktnavn">@product.Name</td>
                <td data-label="Slet">
                    <form asp-controller="ProductManager" asp-action="Delete" method="post" onsubmit="return confirm('Er du sikker på, at du vil slette dette produkt?');">
                        <input type="hidden" name="prodID" value="@product.ProductID" />
                        <button type="submit" class="action-btn btn-danger">Slet</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <div class="pagination-container">
        <ul class="pagination">
            <li class="@(Model.CurrentPage == 1 ? "disabled" : "")">
                @if (Model.CurrentPage > 1)
                {
                    <a href="@Url.Action("GetProductTable", new { nextPage = Model.CurrentPage - 1 })">&laquo;</a>
                }
                else
                {
                    <span>&laquo;</span>
                }
            </li>

            @{
                int startPage = Math.Max(1, Model.CurrentPage - 2);
                int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);

                if (startPage > 1)
                {
                    <li><a href="@Url.Action("GetProductTable", new { nextPage = 1 })">1</a></li>
                    @if (startPage > 2)
                    {
                        <li><span>...</span></li>
                    }
                }

                for (int i = startPage; i <= endPage; i++)
                {
                    <li class="@(i == Model.CurrentPage ? "active" : "")">
                        <a href="@Url.Action("GetProductTable", new { nextPage = i })">@i</a>
                    </li>
                }

                if (endPage < Model.TotalPages)
                {
                    @if (endPage < Model.TotalPages - 1)
                    {
                        <li><span>...</span></li>
                    }
                    <li><a href="@Url.Action("GetProductTable", new { nextPage = Model.TotalPages })">@Model.TotalPages</a></li>
                }
            }

            <li class="@(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <a href="@Url.Action("GetProductTable", new { nextPage = Model.CurrentPage + 1 })">&raquo;</a>
                }
                else
                {
                    <span>&raquo;</span>
                }
            </li>
        </ul>
    </div>
}