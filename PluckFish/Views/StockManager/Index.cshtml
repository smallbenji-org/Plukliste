@model PluckFish.Controllers.StockViewModel;
@{
    ViewData["Title"] = "Lagersystem";
}

<main>
    <div class="card">
        <div class="area">
            <div class="sort-options">
                <button class="sort-btn active">Alle Varer</button>
                <button class="sort-btn">Vis kun rest vare</button>
                <button class="sort-btn">Vis kun ikke rest vare</button>
            </div>
            <div class="selector-header">
                <button class="refresh-btn">↻ Opdater</button>
            </div>
        </div>
        <table class="vare-table">
            <thead>
                <tr>
                    <th>Produkt ID</th>
                    <th>Produktnavn</th>
                    <th>Type</th>
                    <th>Amount</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>              
                 @foreach (Item item in Model.stockInventory)
                 {
                     <tr>
                         <td>@item.Product.ProductID</td>
                         <td>@item.Product.Name</td>
                         <td>@item.Type</td>
                         <td>@item.Amount</td>
                         <td>
                            <button type="button" class="edit-btn" data-productid="@item.Product.ProductID">Rediger</button>
                         </td>
                     </tr>
                 }            
            </tbody>
        </table>
    </div>

    <div class="card" id="tomForm">
        <h2>Rediger vare</h2>
        <p class="edit-placeholder">Vælg en vare fra listen for at redigere.</p>
    </div>

    <div class="card hidden" id="redigerForm">
        <h2 id="redigerTitel">Rediger vare ()</h2>
        <form class="edit-form" method="post" action="/StockManager/Result">
            <div class="form-group">
                <label for="vare-maengde">Vare mængde</label>
                <input type="number" id="vare-maengde" class="form-control" value="1" min="0">
            </div>
            <div class="form-group-inline">
                <input type="checkbox" id="rest-vare" class="form-checkbox">
                <label for="rest-vare">Rest vare</label>
            </div>
            <button type="submit" class="confirm-btn">Gem ændringer</button>
        </form>
    </div>


    <script>
        const editButtons = document.querySelectorAll(".edit-btn");
        const redigerFormContainer = document.getElementById("redigerForm");
        const redigerForm = redigerFormContainer.querySelector("form");
        const redigerFormTitel = document.getElementById("redigerTitel");
        const tomForm = document.getElementById("tomForm");

        editButtons.forEach(btn => {
            btn.addEventListener("click", () => {
                const productId = btn.dataset.productid; 

                redigerFormContainer.dataset.productId = productId;

                tomForm.classList.add("hidden");
                redigerFormTitel.innerText = "Rediger vare ("+productId+")";
                redigerFormContainer.classList.remove("hidden");
            });
        });

        redigerForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            const productId = redigerFormContainer.dataset.productId;

            const formData = new FormData(redigerForm);
            formData.append("prodId", productId);
            const vareForm = document.getElementById("vare-maengde");
            formData.append("amount", vareForm.value);

            const response = await fetch(redigerForm.action, {
                method: redigerForm.method,
                body: formData
            });

            const result = await response.text();
            location.reload();
            });
    </script>
</main>