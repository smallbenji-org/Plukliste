@model PluckFish.Controllers.StockViewModel

<style>
    #uploadForm.drag-over {
        border: 2px dashed #007bff;
        background-color: #f0f8ff;
    }
</style>
<div class="sort-options" id="orderBtns">
    <form asp-action="ItemOrder" method="post">
        <input type="hidden" name="order" value="Newest" />
        <input type="hidden" name="filter" value=@Model.filter />
        <button type="submit" name="order" value="Newest" class="sort-btn-small">Newest</button>
    </form>
    <form asp-action="ItemOrder" method="post">
        <input type="hidden" name="order" value="Oldest" />
        <input type="hidden" name="filter" value=@Model.filter />
        <button type="submit" name="order" value="Oldest" class="sort-btn-small">Oldest</button>
    </form>
    <form asp-action="ItemOrder" method="post">
        <input type="hidden" name="order" value="Highest" />
        <input type="hidden" name="filter" value=@Model.filter />
        <button type="submit" name="order" value="Highest" class="sort-btn-small">Quantity highest to lowest</button>
    </form>
    <form asp-action="ItemOrder" method="post">
        <input type="hidden" name="order" value="Lowest" />
        <input type="hidden" name="filter" value=@Model.filter />
        <button type="submit" name="order" value="Lowest" class="sort-btn-small">Quantity lowest to highest</button>
    </form>
</div>
<div class="table-responsive" id="table-content">

    <form asp-action="ItemsImport" enctype="multipart/form-data" method="post" class="card-button twenty-percent" id="uploadForm">
        <label for="fileInput" class="create-btn card-button2">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>
            Importer varer
        </label>
        <input type="file" id="fileInput" name="file" required style="display: none;" accept=".json,.csv,.xml" />
    </form>
    <form asp-action="ExportPickingList" method="post" style="display: inline;">
        <input type="hidden" name="filter" value="@Model.filter" />
        <input type="hidden" name="searchText" id="exportSearchText" />
        <select class="action-btn btn-eksport" id="eksportList" name="formatType">
            <option value="" selected>-- VÃ¦lg en eksport format for alle  --</option>
            <option value=".json">JSON</option>
            <option value=".csv">CSV</option>
            <option value=".xml">XML</option>
        </select>
    </form>

    <script>
        const uploadForm = document.getElementById("uploadForm");
        const fileInput = document.getElementById("fileInput");

        if (document.getElementById("listSelector")) {
            document.getElementById("listSelector").addEventListener("change", function () {
                if (this.value) {
                    this.form.submit();
                }
            });
        }

        fileInput.addEventListener("change", function () {
            if (this.value) {
                uploadForm.submit();
            }
        });

        uploadForm.addEventListener("dragover", (event) => {
            event.preventDefault();
            uploadForm.classList.add("drag-over");
        });

        uploadForm.addEventListener("dragleave", () => {
            uploadForm.classList.remove("drag-over");
        });

        uploadForm.addEventListener("drop", (event) => {
            event.preventDefault();
            uploadForm.classList.remove("drag-over");

            if (event.dataTransfer.files.length > 0) {
                fileInput.files = event.dataTransfer.files;
                const changeEvent = new Event('change', { bubbles: true });
                fileInput.dispatchEvent(changeEvent);
            }
        });

        document.getElementById("eksportList").addEventListener("change", function () {
            if (this.value) {
                document.getElementById("exportSearchText").value = document.getElementById("searchBox").value;
                this.form.submit();
            }
        })
    </script>

    <table class="vare-table">
        <thead>
            <tr>
                <th>Produkt Id</th>
                <th>Produkt navn</th>
                <th>Type</th>
                <th>Amount</th>
                <th>Rest vare</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="produkter">
            @foreach (Item item in Model.stockInventory)
            {
                <tr>
                    <td data-label="Produkt Id">@item.Product.ProductID</td>
                    <td data-label="Produkt navn" class="produktnavn">@item.Product.Name</td>
                    <td data-label="Type">@item.Type</td>
                    <td data-label="Amount">@item.Amount</td>
                    <td class="checkbox-cell" data-label="Rest vare">
                        @if (item.RestVare)
                        {
                            <input type="checkbox" class="form-checkbox" checked onclick="return false" />
                        }
                        else
                        {
                            <input type="checkbox" class="form-checkbox" onclick="return false" />
                        }
                    </td>
                    <td data-label="Rediger">
                        <button type="button" class="edit-btn" data-productid="@item.Product.ProductID" data-amount="@item.Amount" data-restvare="@item.RestVare.ToString()">Rediger</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.TotalPages > 1)
    {
        <div class="pagination-container">
            <ul class="pagination">
                <li class="@(Model.currentPage == 1 ? "disabled" : "")">
                    @if (Model.currentPage > 1)
                    {
                        <a href="@Url.Action("GetStockTable", new { nextPage = Model.currentPage - 1, filter = Model.filter })">&laquo;</a>
                    }
                    else
                    {
                        <span>&laquo;</span>
                    }
                </li>

                @{
                    int startPage = Math.Max(1, Model.currentPage - 2);
                    int endPage = Math.Min(Model.TotalPages, Model.currentPage + 2);

                    if (startPage > 1)
                    {
                        <li><a href="@Url.Action("GetStockTable", new { nextPage = 1, filter = Model.filter })">1</a></li>
                        @if (startPage > 2)
                        {
                            <li><span>...</span></li>
                        }
                    }

                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="@(i == Model.currentPage ? "active" : "")">
                            <a href="@Url.Action("GetStockTable", new { nextPage = i, filter = Model.filter })">@i</a>
                        </li>
                    }

                    if (endPage < Model.TotalPages)
                    {
                        @if (endPage < Model.TotalPages - 1)
                        {
                            <li><span>...</span></li>
                        }
                        <li><a href="@Url.Action("GetStockTable", new { nextPage = Model.TotalPages, filter = Model.filter })">@Model.TotalPages</a></li>
                    }
                }

                <li class="@(Model.currentPage == Model.TotalPages ? "disabled" : "")">
                    @if (Model.currentPage < Model.TotalPages)
                    {
                        <a href="@Url.Action("GetStockTable", new { nextPage = Model.currentPage + 1, filter = Model.filter })">&raquo;</a>
                    }
                    else
                    {
                        <span>&raquo;</span>
                    }
                </li>
            </ul>
        </div>
    }
</div>